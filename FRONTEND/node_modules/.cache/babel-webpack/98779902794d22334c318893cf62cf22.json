{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Action, Selector, State } from '@ngxs/store';\nimport { AddProduct, DeleteProduct } from '../actions/product-actions';\nimport * as i0 from \"@angular/core\";\nlet ProductState = class ProductState {\n  static getNbProducts(state) {\n    return state.produits.length;\n  }\n\n  static getListeProducts(state) {\n    return state.produits;\n  }\n\n  add({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState();\n    patchState({\n      produits: [...state.produits, payload]\n    });\n  }\n\n  delete({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState();\n    patchState({\n      produits: state.produits.filter(p => p != payload)\n    });\n  }\n\n};\n\nProductState.ɵfac = function ProductState_Factory(t) {\n  return new (t || ProductState)();\n};\n\nProductState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductState,\n  factory: ProductState.ɵfac\n});\n\n__decorate([Action(AddProduct)], ProductState.prototype, \"add\", null);\n\n__decorate([Action(DeleteProduct)], ProductState.prototype, \"delete\", null);\n\n__decorate([Selector()], ProductState, \"getNbProducts\", null);\n\n__decorate([Selector()], ProductState, \"getListeProducts\", null);\n\nProductState = __decorate([State({\n  name: 'products',\n  defaults: {\n    produits: []\n  }\n})], ProductState);\nexport { ProductState };","map":null,"metadata":{},"sourceType":"module"}