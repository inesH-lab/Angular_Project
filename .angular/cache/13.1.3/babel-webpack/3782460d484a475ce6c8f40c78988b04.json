{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Select } from '@ngxs/store';\nimport { AddAddress } from '../shared/actions/adresse-action';\nimport { AdresseState } from '../shared/states/adresse-state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"../pipes/telephone.pipe\";\nexport class ValidationComponent {\n  //public user : User = new User(\"\",\"\",\"\");\n  //@Input() Nom : string = \"\";\n  //@Input() Prenom : string = \"\";\n  //@Input() Pays : string = \"\";\n  constructor(store) {\n    this.store = store;\n    this.newUser = {};\n  }\n\n  ngOnInit() {//this.user = this.Users.user;\n  }\n\n  addAdresse(adresse) {\n    this.store.dispatch(new AddAddress(adresse));\n  }\n\n}\n\nValidationComponent.ɵfac = function ValidationComponent_Factory(t) {\n  return new (t || ValidationComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nValidationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ValidationComponent,\n  selectors: [[\"app-validation\"]],\n  inputs: {\n    newUser: \"newUser\"\n  },\n  decls: 24,\n  vars: 11,\n  template: function ValidationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"validation works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"R\\u00E9sum\\u00E9 des donn\\u00E9es enregistr\\u00E9es :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"P\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"P\");\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p\");\n      i0.ɵɵtext(20);\n      i0.ɵɵpipe(21, \"telephone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"p\");\n      i0.ɵɵtext(23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"NOM : \", ctx.newUser.Nom, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" Prenom : \", ctx.newUser.Prenom, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" Civilit\\u00E9 : \", ctx.newUser.Civilite, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Pays : \", ctx.newUser.Pays, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Adresse : \", ctx.newUser.Adresse, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Login : \", ctx.newUser.Login, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Password : \", ctx.newUser.Password, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Telephone : \", i0.ɵɵpipeBind1(21, 9, ctx.newUser.Telephone), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Email : \", ctx.newUser.Email, \"\");\n    }\n  },\n  pipes: [i2.TelephonePipe],\n  styles: [\"\"]\n});\n\n__decorate([Select(AdresseState.getNbAdresses)], ValidationComponent.prototype, \"nb$\", void 0);\n\n__decorate([Select(AdresseState.getListeAdresse)], ValidationComponent.prototype, \"liste$\", void 0);","map":null,"metadata":{},"sourceType":"module"}