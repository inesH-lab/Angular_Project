{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../shared/service/login.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction AuthComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Login obligatoire. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Nom d'utilisateur non valide! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AuthComponent_div_4_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, AuthComponent_div_4_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.login.errors == null ? null : ctx_r0.login.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.login.errors == null ? null : ctx_r0.login.errors.pattern);\n  }\n}\n\nfunction AuthComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Mot de passe non valide! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AuthComponent_div_9_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors.required);\n  }\n}\n\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(formBuilder, loginservice, router) {\n      this.formBuilder = formBuilder;\n      this.loginservice = loginservice;\n      this.router = router;\n      this.loginForm = this.formBuilder.group({\n        password: ['', Validators.required],\n        login: ['', [Validators.required]]\n      });\n    }\n\n    ngOnInit() {}\n\n    CreateAccount() {\n      this.router.navigate(['formulaire']);\n    }\n\n    onSubmit() {\n      var _a, _b;\n\n      if (this.loginForm.valid) {\n        console.log(this.loginForm.value);\n        this.loginservice.postLogin((_a = this.login) === null || _a === void 0 ? void 0 : _a.value, (_b = this.password) === null || _b === void 0 ? void 0 : _b.value).subscribe(val => {\n          var _a;\n\n          this.user$ = this.loginservice.getLogin((_a = this.login) === null || _a === void 0 ? void 0 : _a.value);\n          this.router.navigate(['product']);\n        });\n      } else {\n        Object.keys(this.loginForm.controls).forEach(field => {\n          const control = this.loginForm.get(field);\n          control === null || control === void 0 ? void 0 : control.markAsTouched({\n            onlySelf: true\n          });\n        });\n      }\n    }\n\n    get password() {\n      return this.loginForm.get('password');\n    }\n\n    get login() {\n      return this.loginForm.get('login');\n    }\n\n  }\n\n  AuthComponent.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  AuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-auth\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"form-group\", \"col-5\"], [\"class\", \"aler alert-danger\", 4, \"ngIf\"], [\"for\", \"login\"], [\"type\", \"text\", \"id\", \"login\", \"formControlName\", \"login\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"aler\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, AuthComponent_div_4_Template, 3, 2, \"div\", 4);\n        i0.ɵɵelementStart(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵtemplate(9, AuthComponent_div_9_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵtext(14, \"Connexion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\");\n        i0.ɵɵelementStart(16, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_16_listener() {\n          return ctx.CreateAccount();\n        });\n        i0.ɵɵtext(17, \"Cr\\u00E9er un compte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.login && ctx.login.invalid && (ctx.login.dirty || ctx.login.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.password && ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}