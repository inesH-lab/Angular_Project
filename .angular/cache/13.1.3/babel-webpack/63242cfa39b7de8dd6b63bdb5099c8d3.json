{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { RouterModule } from '@angular/router';\nimport { ProductComponent } from './product/product.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ProductState } from './shared/states/product-state';\nimport { NgxsModule } from '@ngxs/store';\nimport { LoginService } from './shared/service/login.service';\nimport { ApiLoginInterceptor } from './api-login.interceptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngxs/store\";\nconst appRoutes = [{\n  path: 'product',\n  component: ProductComponent\n}, {\n  path: 'auth',\n  component: AuthComponent\n}, {\n  path: 'formulaire',\n  component: FormComponent\n}, {\n  path: 'detail',\n  loadChildren: () => import('./detail/lazyloading.module').then(m => m.LazyLoadingModule)\n}, {\n  path: '',\n  component: FormComponent\n}];\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [LoginService, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiLoginInterceptor,\n      multi: true\n    }],\n    imports: [[BrowserModule, //AppRoutingModule,\n    FormsModule, ReactiveFormsModule, Ng2SearchPipeModule, HttpClientModule, RouterModule.forRoot(appRoutes), NgxsModule.forRoot([ProductState])]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}