{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Action, Selector, State } from '@ngxs/store';\nimport { DeleteAddress, AddAddress } from '../actions/adresse-action';\nimport * as i0 from \"@angular/core\";\nlet AdresseState = class AdresseState {\n  static getNbAdresses(state) {\n    return state.adresse.length;\n  }\n\n  static getListeAdresse(state) {\n    return state.adresse;\n  }\n\n  add({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState();\n    patchState({\n      adresse: [...state.adresse, payload]\n    });\n  }\n\n  delete({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState();\n    patchState({\n      adresse: state.adresse.filter(p => p != payload)\n    });\n  }\n\n};\n\nAdresseState.ɵfac = function AdresseState_Factory(t) {\n  return new (t || AdresseState)();\n};\n\nAdresseState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdresseState,\n  factory: AdresseState.ɵfac\n});\n\n__decorate([Action(AddAddress)], AdresseState.prototype, \"add\", null);\n\n__decorate([Action(DeleteAddress)], AdresseState.prototype, \"delete\", null);\n\n__decorate([Selector()], AdresseState, \"getNbAdresses\", null);\n\n__decorate([Selector()], AdresseState, \"getListeAdresse\", null);\n\nAdresseState = __decorate([State({\n  name: 'adresse',\n  defaults: {\n    adresse: []\n  }\n})], AdresseState);\nexport { AdresseState };","map":null,"metadata":{},"sourceType":"module"}