{"ast":null,"code":"import { HttpResponse } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nexport let ApiLoginInterceptor = /*#__PURE__*/(() => {\n  class ApiLoginInterceptor {\n    constructor() {\n      this.jwtToken = \"\";\n    }\n\n    intercept(req, next) {\n      if (this.jwtToken != \"\") {\n        req = req.clone({\n          setHeaders: {\n            Authorization: `Bearer ${this.jwtToken}`\n          }\n        });\n      }\n\n      return next.handle(req).pipe(tap(evt => {\n        if (evt instanceof HttpResponse) {\n          let tab;\n          let enteteAuthorization = evt.headers.get(\"Authorization\");\n\n          if (enteteAuthorization != null) {\n            tab = enteteAuthorization.split(/Bearer\\s+(.*)$/i);\n\n            if (tab.length > 1) {\n              this.jwtToken = tab[1];\n            }\n          }\n        }\n      }, error => {\n        switch (error.status) {\n          case 400:\n          case 401:\n        }\n\n        return of(null);\n      }));\n    }\n\n  }\n\n  ApiLoginInterceptor.ɵfac = function ApiLoginInterceptor_Factory(t) {\n    return new (t || ApiLoginInterceptor)();\n  };\n\n  ApiLoginInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiLoginInterceptor,\n    factory: ApiLoginInterceptor.ɵfac\n  });\n  return ApiLoginInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}